function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
call show 0
pop temp 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
call Memory.deAlloc 0
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 0
pop temp 0
call draw 0
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 0
pop temp 0
call draw 0
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 0
push this 0
sub
pop this 2
push argument 1
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto l0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 1
lt
pop this 8
push this 0
push argument 0
lt
pop this 9
goto l1
label l0
push this 0
push argument 0
lt
pop this 8
push this 1
push argument 1
lt
pop this 9
label l1
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
call hide 0
pop temp 0
push this 4
push constant 0
lt
not
if-goto l2
push this 4
push this 5
add
pop this 4
goto l3
label l2
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto l4
push this 7
not
if-goto l5
push this 0
push constant 4
add
pop this 0
goto l6
label l5
push this 1
push constant 4
add
pop this 1
label l6
goto l7
label l4
push this 7
not
if-goto l8
push this 0
push constant 4
sub
pop this 0
goto l9
label l8
push this 1
push constant 4
sub
pop this 1
label l9
label l7
label l3
push this 8
not
if-goto l10
push this 7
not
if-goto l11
push this 1
push constant 4
add
pop this 1
goto l12
label l11
push this 0
push constant 4
add
pop this 0
label l12
goto l13
label l10
push this 7
not
if-goto l14
push this 1
push constant 4
sub
pop this 1
goto l15
label l14
push this 0
push constant 4
sub
pop this 0
label l15
label l13
push this 0
push this 10
gt
not
not
if-goto l16
push constant 1
pop this 14
push this 10
pop this 0
goto l17
label l16
label l17
push this 0
push this 11
lt
not
not
if-goto l18
push constant 2
pop this 14
push this 11
pop this 0
goto l19
label l18
label l19
push this 1
push this 12
gt
not
not
if-goto l20
push constant 3
pop this 14
push this 12
pop this 1
goto l21
label l20
label l21
push this 1
push this 13
lt
not
not
if-goto l22
push constant 4
pop this 14
push this 13
pop this 1
goto l23
label l22
label l23
call show 0
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 0
push constant 0
eq
not
if-goto l24
push constant 10
pop local 4
goto l25
label l24
push this 2
push constant 0
lt
not
push argument 0
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 0
push constant 1
neg
eq
and
or
not
if-goto l26
push constant 20
pop local 4
goto l27
label l26
push constant 5
pop local 4
label l27
label l25
push this 14
push constant 1
eq
not
if-goto l28
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto l29
label l28
push this 14
push constant 2
eq
not
if-goto l30
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto l31
label l30
push this 14
push constant 3
eq
not
if-goto l32
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto l33
label l32
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label l33
label l31
label l29
push local 0
push local 1
call setDestination 2
pop temp 0
push constant 0
return
